 /*==========================================================================
                SeqAn - The Library for Sequence Analysis
                          http://www.seqan.de 
 ============================================================================
  Copyright (C) 2007

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

 ==========================================================================*/

#ifndef SEQAN_HEADER_FIND2_GENERATED_FORWARDS_H 
#define SEQAN_HEADER_FIND2_GENERATED_FORWARDS_H 

//////////////////////////////////////////////////////////////////////////////
// NOTE: This file is automatically generated by build_forwards.py
//       Do not edit this file manually!
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
// CLASSES
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// DPSearch2

template <typename TScore, typename TSpec , typename TFindBeginPatternSpec > struct DPSearch2;       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(30)

//____________________________________________________________________________
// Finder2

template <typename THaystack, typename TSpec > struct Finder2;       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_base.h"(43)

//____________________________________________________________________________
// Pattern2

template <typename TNeedle, typename TSpec> struct Pattern2;       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_base.h"(40)

//____________________________________________________________________________
// _FindState

struct _FindState;       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_base.h"(29)

} //namespace seqan


//////////////////////////////////////////////////////////////////////////////
// TYPEDEFS


//////////////////////////////////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// begin

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec> typename Iterator<TNeedle>::Type begin(Pattern2<TNeedle, DPSearch2<TScore, TSpec, True> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(113)
template <typename TNeedle> typename Iterator<TNeedle>::Type begin(Pattern2<TNeedle, Simple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(67)
template <typename TNeedle> typename Iterator<TNeedle>::Type begin(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(88)
template <typename TNeedleSet> typename Iterator<typename Value<TNeedleSet>::Type>::Type begin(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(76)
template <typename TNeedle> typename Iterator<TNeedle>::Type begin(Pattern2<TNeedle, WildShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(65)

//____________________________________________________________________________
// beginPosition

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec> typename Position<TNeedle>::Type beginPosition(Pattern2<TNeedle, DPSearch2<TScore, TSpec, True> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(127)
template <typename TNeedle> typename Position<TNeedle>::Type beginPosition(Pattern2<TNeedle, Simple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(81)
template <typename THaystack> typename Position<THaystack>::Type & beginPosition(const Finder2<THaystack, void> & finder);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_finder_default.h"(50)
template <typename TNeedle> typename Position<TNeedle>::Type beginPosition(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(102)
template <typename TNeedleSet> typename Position<typename Value<TNeedleSet>::Type>::Type beginPosition(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(90)
template <typename TNeedle> typename Position<TNeedle>::Type beginPosition(Pattern2<TNeedle, WildShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(79)

//____________________________________________________________________________
// end

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec> typename Iterator<TNeedle>::Type end(Pattern2<TNeedle, DPSearch2<TScore, TSpec, True> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(120)
template <typename TNeedle> typename Iterator<TNeedle>::Type end(Pattern2<TNeedle, Simple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(74)
template <typename TNeedle> typename Iterator<TNeedle>::Type end(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(95)
template <typename TNeedleSet> typename Iterator<typename Value<TNeedleSet>::Type>::Type end(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(83)
template <typename TNeedle> typename Iterator<TNeedle>::Type end(Pattern2<TNeedle, WildShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(72)

//____________________________________________________________________________
// endPosition

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec> typename Position<TNeedle>::Type endPosition(Pattern2<TNeedle, DPSearch2<TScore, TSpec, True> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(134)
template <typename TNeedle> typename Position<TNeedle>::Type endPosition(Pattern2<TNeedle, Simple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(88)
template <typename THaystack> typename Position<THaystack>::Type & endPosition(const Finder2<THaystack, void> & finder);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_finder_default.h"(57)
template <typename TNeedle> typename Position<TNeedle>::Type endPosition(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(109)
template <typename TNeedleSet> typename Position<typename Value<TNeedleSet>::Type>::Type endPosition(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(97)
template <typename TNeedle> typename Position<TNeedle>::Type endPosition(Pattern2<TNeedle, WildShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(86)

//____________________________________________________________________________
// find

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec, typename TFindBeginPatternSpec> bool find(Finder2<THaystack, void> & finder, Pattern2<TNeedle, DPSearch2<TScore, TSpec, TFindBeginPatternSpec> > & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(143)
template <typename THaystack, typename TNeedle> bool find(Finder2<THaystack, void> & finder, Pattern2<TNeedle, Simple> & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(96)
template <typename THaystack, typename TNeedle> bool find(Finder2<THaystack, void> & finder, Pattern2<TNeedle, HammingSimple> & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(117)
template <typename THaystack, typename TNeedleSet> bool find(Finder2<THaystack, void> & finder, Pattern2<TNeedleSet, MultipleShiftAnd> & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(105)
template <typename THaystack, typename TNeedle> bool find(Finder2<THaystack, void> & finder, Pattern2<TNeedle, WildShiftAnd> & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(94)

//____________________________________________________________________________
// findBegin

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec> bool findBegin(Finder2<THaystack, void> & finder, Pattern2<TNeedle, DPSearch2<TScore, TSpec, True> > & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(153)
template <typename THaystack, typename TNeedle> bool findBegin(Finder2<THaystack, void> & finder, Pattern2<TNeedle, Simple> & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(137)
template <typename THaystack, typename TNeedle> bool findBegin(Finder2<THaystack, void> & finder, Pattern2<TNeedle, HammingSimple> & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(126)
template <typename THaystack, typename TNeedleSet> bool findBegin(Finder2<THaystack, void> & finder, Pattern2<TNeedleSet, MultipleShiftAnd> & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(114)
template <typename THaystack, typename TNeedle> bool findBegin(Finder2<THaystack, void> & finder, Pattern2<TNeedle, WildShiftAnd> & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(103)

//____________________________________________________________________________
// getAlignment

template <typename THaystack, typename TNeedle, typename TAlignSeq, typename TAlignSpec, typename TScore, typename TSpec> bool getAlignment(Finder2<THaystack, void> &finder, Pattern2<TNeedle, DPSearch2<TScore, TSpec, True> > & pattern, Align<TAlignSeq, TAlignSpec> & outAlignment);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(164)
template <typename THaystack, typename TNeedle, typename TAlignSeq, typename TAlignSpec> bool getAlignment(Finder2<THaystack, void> &finder, Pattern2<TNeedle, Simple> &pattern, Align<TAlignSeq, TAlignSpec> &outAlignment);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(149)
template <typename THaystack, typename TNeedle, typename TAlignSeq, typename TAlignSpec> bool getAlignment(Finder2<THaystack, void> &finder, Pattern2<TNeedle, HammingSimple> &pattern, Align<TAlignSeq, TAlignSpec> &outAlignment);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(136)
template <typename THaystack, typename TNeedleSet, typename TAlignSeq, typename TAlignSpec> bool getAlignment(Finder2<THaystack, void> &finder, Pattern2<TNeedleSet, MultipleShiftAnd> &pattern, Align<TAlignSeq, TAlignSpec> &outAlignment);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(124)
template <typename THaystack, typename TNeedle, typename TAlignSeq, typename TAlignSpec> bool getAlignment(Finder2<THaystack, void> &finder, Pattern2<TNeedle, WildShiftAnd> &pattern, Align<TAlignSeq, TAlignSpec> &outAlignment);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(113)

//____________________________________________________________________________
// getScoreLimit

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec, typename TFindBeginPatternSpec> int getScoreLimit(Pattern2<TNeedle, DPSearch2<TScore, TSpec, TFindBeginPatternSpec> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(63)
template <typename TNeedle> int getScoreLimit(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(54)

//____________________________________________________________________________
// getScoringScheme

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec, typename TFindBeginPatternSpec> TScore getScoringScheme(Pattern2<TNeedle, DPSearch2<TScore, TSpec, TFindBeginPatternSpec> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(71)

//____________________________________________________________________________
// haystack2

template <typename THaystack> THaystack & haystack2(Finder2<THaystack, void> & finder);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_finder_default.h"(64)

//____________________________________________________________________________
// host

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec, typename TFindBeginPatternSpec> TNeedle const & host(Pattern2<TNeedle, DPSearch2<TScore, TSpec, TFindBeginPatternSpec> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(85)
template <typename TNeedle> TNeedle const & host(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(60)
template <typename TNeedleSet> TNeedleSet const & host(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(41)
template <typename TNeedle> TNeedle const & host(Pattern2<TNeedle, WildShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(37)

//____________________________________________________________________________
// infix

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec> Segment<TNeedle, InfixSegment> infix(Pattern2<TNeedle, DPSearch2<TScore, TSpec, True> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(106)
template <typename TNeedle> Segment<TNeedle, InfixSegment> infix(Pattern2<TNeedle, Simple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(60)
template <typename TNeedle> Segment<TNeedle, InfixSegment> infix(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(81)
template <typename TNeedleSet> Segment<typename Value<TNeedleSet>::Type, InfixSegment> infix(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(69)
template <typename TNeedle> Segment<TNeedle, InfixSegment> infix(Pattern2<TNeedle, WildShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(58)

//____________________________________________________________________________
// length

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec> typename Position<TNeedle>::Type length(Pattern2<TNeedle, DPSearch2<TScore, TSpec, True> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(99)
template <typename TNeedle> typename Position<TNeedle>::Type length(Pattern2<TNeedle, Simple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(53)
template <typename TNeedle> typename Position<TNeedle>::Type length(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(74)
template <typename TNeedleSet> typename Position<typename Value<TNeedleSet>::Type>::Type length(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(62)
template <typename TNeedle> typename Position<TNeedle>::Type length(Pattern2<TNeedle, WildShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(51)

//____________________________________________________________________________
// needle

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec, typename TFindBeginPatternSpec> TNeedle const & needle(Pattern2<TNeedle, DPSearch2<TScore, TSpec, TFindBeginPatternSpec> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(92)
template <typename TNeedle> TNeedle const & needle(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(67)
template <typename TNeedle> TNeedle const & needle(Pattern2<TNeedle, WildShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_pattern_wild_shiftand.h"(44)

//____________________________________________________________________________
// needle2

template <typename TNeedle> TNeedle & needle2(Pattern2<TNeedle, Simple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_exact_simple.h"(46)

//____________________________________________________________________________
// needleIdentifier

template <typename TNeedleSet> typename Position<TNeedleSet>::Type needleIdentifier(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(55)

//____________________________________________________________________________
// needles

template <typename TNeedleSet> TNeedleSet const & needles(Pattern2<TNeedleSet, MultipleShiftAnd> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_multiple_exact_shiftand.h"(48)

//____________________________________________________________________________
// score

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec, typename TFindBeginPatternSpec> int score(Pattern2<TNeedle, DPSearch2<TScore, TSpec, TFindBeginPatternSpec> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(55)
template <typename TNeedle> int score(Pattern2<TNeedle, HammingSimple> const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_hamming_simple.h"(47)

//____________________________________________________________________________
// scoringScheme

template <typename THaystack, typename TNeedle, typename TScore, typename TSpec, typename TFindBeginPatternSpec> TScore const & scoringScheme(Pattern2<TNeedle, DPSearch2<TScore, TSpec, TFindBeginPatternSpec> > const & pattern);       	// "/Users/manuel/Development/seqan-trunk/projects/library/seqan/find2/find_approx_dpsearch.h"(78)

} //namespace seqan

#endif

