#ifndef SEQAN_HEADER_CHAINING_GENERATED_FORWARDS_H 
#define SEQAN_HEADER_CHAINING_GENERATED_FORWARDS_H 

//////////////////////////////////////////////////////////////////////////////
// NOTE: This file is automatically generated by build_forwards.py
//       Do not edit this file manually!
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
// CLASSES
//////////////////////////////////////////////////////////////////////////////

namespace SEQAN_NAMESPACE_MAIN {

//____________________________________________________________________________
// Complete

struct Complete;       	// "projects/library/seqan/chaining/skip_list_type.h"(112)

//____________________________________________________________________________
// Deferred

struct Deferred;       	// "projects/library/seqan/chaining/skip_list_type.h"(114)

//____________________________________________________________________________
// Dynamic

struct Dynamic;       	// "projects/library/seqan/chaining/skip_list_type.h"(108)

//____________________________________________________________________________
// Key

template <typename T > struct Key;       	// "projects/library/seqan/chaining/skip_list_type.h"(18)

//____________________________________________________________________________
// Pair

template <typename _T1, typename _T2, typename Compressed > struct Pair;       	// "projects/library/seqan/chaining/skip_list_type.h"(24)

//____________________________________________________________________________
// SkipBaseElement

template <typename TObject, typename TModus , typename TSpec , typename TStructuring > struct SkipBaseElement;       	// "projects/library/seqan/chaining/skip_list_type.h"(125)

//____________________________________________________________________________
// SkipElement

template <typename TObject, typename TModus , typename TSpec , typename TStructuring > struct SkipElement;       	// "projects/library/seqan/chaining/skip_list_type.h"(122)

//____________________________________________________________________________
// SkipList

template <typename TObject, typename TModus , typename TSpec , typename TStructuring > struct SkipList;       	// "projects/library/seqan/chaining/skip_list_type.h"(128)

//____________________________________________________________________________
// Static

struct Static;       	// "projects/library/seqan/chaining/skip_list_type.h"(110)

//____________________________________________________________________________
// _Empty

struct _Empty;       	// "projects/library/seqan/chaining/skip_list_type.h"(95)

} //namespace SEQAN_NAMESPACE_MAIN
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// ChainSoP

struct ChainSoP;       	// "projects/library/seqan/chaining/score_chain.h"(13)

//____________________________________________________________________________
// Chainer

struct Chainer;       	// "projects/library/seqan/chaining/chain_base.h"(45)

//____________________________________________________________________________
// ClassPool

template <typename TClass, typename TType, typename TParentAllocator > struct ClassPool;       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(42)

//____________________________________________________________________________
// Complete

struct Complete;       	// "projects/library/seqan/chaining/rt_base.h"(24)

//____________________________________________________________________________
// Deferred

struct Deferred;       	// "projects/library/seqan/chaining/rt_base.h"(27)

//____________________________________________________________________________
// Fragment

template <typename TBorder, typename TSpec > struct Fragment;       	// "projects/library/seqan/chaining/chain_base.h"(24)
template <typename TBorder, typename TSpec > struct Fragment;       	// "projects/library/seqan/chaining/fragment.h"(112)

//____________________________________________________________________________
// G_0_Cost

struct G_0_Cost;       	// "projects/library/seqan/chaining/chain_base.h"(49)

//____________________________________________________________________________
// G_1_Cost

struct G_1_Cost;       	// "projects/library/seqan/chaining/chain_base.h"(53)

//____________________________________________________________________________
// G_Inf_Cost

struct G_Inf_Cost;       	// "projects/library/seqan/chaining/chain_base.h"(57)

//____________________________________________________________________________
// G_SoP_Cost

struct G_SoP_Cost;       	// "projects/library/seqan/chaining/chain_base.h"(61)

//____________________________________________________________________________
// Limited

struct Limited;       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(22)

//____________________________________________________________________________
// Manhattan

struct Manhattan;       	// "projects/library/seqan/chaining/score_chain.h"(9)

//____________________________________________________________________________
// MaxTree

template <typename TSpec > struct MaxTree;       	// "projects/library/seqan/chaining/rmt_base.h"(40)

//____________________________________________________________________________
// RT

template <typename TSpec > struct RT;       	// "projects/library/seqan/chaining/rt_base.h"(17)

//____________________________________________________________________________
// RangeTree

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > class RangeTree;       	// "projects/library/seqan/chaining/rmt_base.h"(43)
template <typename TObject, typename TModus, typename TSpec , typename TStructuring > class RangeTree;       	// "projects/library/seqan/chaining/rt_base.h"(34)

//____________________________________________________________________________
// SemiDeferred

struct SemiDeferred;       	// "projects/library/seqan/chaining/rt_base.h"(21)

//____________________________________________________________________________
// SkipBaseElement

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct SkipBaseElement;       	// "projects/library/seqan/chaining/skip_base_element.h"(779)

//____________________________________________________________________________
// SkipElement

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct SkipElement;       	// "projects/library/seqan/chaining/skip_element.h"(31)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct SkipElement;       	// "projects/library/seqan/chaining/skip_element.h"(329)

//____________________________________________________________________________
// SkipList

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct SkipList;       	// "projects/library/seqan/chaining/rt_base.h"(31)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct SkipList;       	// "projects/library/seqan/chaining/skip_list_impl.h"(388)

//____________________________________________________________________________
// Unlimited

struct Unlimited;       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(19)

//____________________________________________________________________________
// Weight

template <typename T > struct Weight;       	// "projects/library/seqan/chaining/rmt_base.h"(69)

//____________________________________________________________________________
// Zero

struct Zero;       	// "projects/library/seqan/chaining/score_chain.h"(11)

//____________________________________________________________________________
// _ChainPoint

template <typename T, typename TSpec > struct _ChainPoint;       	// "projects/library/seqan/chaining/chain_base.h"(28)
template <typename TFragType, typename TSpec > struct _ChainPoint;       	// "projects/library/seqan/chaining/chain_point.h"(158)

//____________________________________________________________________________
// _ChainSorter

template <typename T > struct _ChainSorter;       	// "projects/library/seqan/chaining/tree_chain_utils.h"(265)

//____________________________________________________________________________
// _ChainSpecType

template <typename Spec > struct _ChainSpecType;       	// "projects/library/seqan/chaining/chain_base.h"(66)

//____________________________________________________________________________
// _DeferredStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct _DeferredStruct;       	// "projects/library/seqan/chaining/skip_base_element.h"(76)

//____________________________________________________________________________
// _DynamicStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct _DynamicStruct;       	// "projects/library/seqan/chaining/skip_base_element.h"(48)

//____________________________________________________________________________
// _MetaFragment

template <typename T > struct _MetaFragment;       	// "projects/library/seqan/chaining/chain_base.h"(36)
template <typename TFragType > struct _MetaFragment;       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(127)

//____________________________________________________________________________
// _RTreeAllocators

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct _RTreeAllocators;       	// "projects/library/seqan/chaining/rt_base.h"(58)

//____________________________________________________________________________
// _RangeCargo

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct _RangeCargo;       	// "projects/library/seqan/chaining/rt_skip_element.h"(13)

//____________________________________________________________________________
// _RangeMaxCargo

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct _RangeMaxCargo;       	// "projects/library/seqan/chaining/rmt_skip_element.h"(11)

//____________________________________________________________________________
// _SearchPath

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > struct _SearchPath;       	// "projects/library/seqan/chaining/skip_list_base.h"(55)

//____________________________________________________________________________
// _WrapperPoint

template <typename T > struct _WrapperPoint;       	// "projects/library/seqan/chaining/chain_base.h"(32)
template <typename TFragType > struct _WrapperPoint;       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(121)

} //namespace seqan


//////////////////////////////////////////////////////////////////////////////
// TYPEDEFS


//////////////////////////////////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////////////////////////////////

namespace SEQAN_NAMESPACE_MAIN {

//____________________________________________________________________________
// _initCargo

template <typename TTag, typename TCargo > inline void _initCargo( TTag * tag, TCargo & _cargo );       	// "projects/library/seqan/chaining/skip_list_type.h"(347)

//____________________________________________________________________________
// getValue

template <typename TKey, typename TVal > TVal getValue( Pair<TKey, TVal> & p );       	// "projects/library/seqan/chaining/skip_list_type.h"(37)

//____________________________________________________________________________
// key

template <typename TKey, typename TVal > inline TKey key( Pair<TKey, TVal> & p );       	// "projects/library/seqan/chaining/skip_list_type.h"(31)
template <typename TKey, typename TVal > inline TKey key( std::pair< TKey, TVal > & p );       	// "projects/library/seqan/chaining/skip_list_type.h"(62)

//____________________________________________________________________________
// setKey

template <typename TKey2, typename TVal > void setKey( Pair<TKey2, TVal> & p, TKey2 theKey);       	// "projects/library/seqan/chaining/skip_list_type.h"(43)
template <typename TKey, typename TVal > void setKey( std::pair<TKey, TVal> & p, TKey theKey );       	// "projects/library/seqan/chaining/skip_list_type.h"(68)

} //namespace SEQAN_NAMESPACE_MAIN
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// _activate

template <typename TObject, typename TSpec, typename TStructuring, typename TSize > void _activate( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * list, TObject * obj, TSize dim );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(132)

//____________________________________________________________________________
// _activateHigherLayer

template <typename TObject, typename TSpec, typename TStructuring, typename TSize > void _activateHigherLayer( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * list, TObject * obj, TSize dim );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(102)

//____________________________________________________________________________
// _activatePriority

template <typename FragType, typename SpecType, typename TScore, typename TSize > inline typename Weight< FragType >::Type _activatePriority( _MetaFragment< FragType > & last_meta, _ChainPoint< FragType, SpecType > & point, G_0_Cost cost, TScore const & score_, TSize dim );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(195)
template <typename FragType, typename SpecType, typename TScore, typename TSize > inline typename Weight< FragType >::Type _activatePriority( _MetaFragment< FragType > & last_meta, _ChainPoint< FragType, SpecType > & point, G_1_Cost cost, TScore const & score_, TSize dim );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(207)

//____________________________________________________________________________
// _activateScoreBuild

template <typename TObject, typename TSpec, typename TStructuring > inline void _activateScoreBuild( SkipBaseElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * base, SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * list, SkipElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > ** search_path );       	// "projects/library/seqan/chaining/rmt_compl_algos.h"(43)

//____________________________________________________________________________
// _add

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename THeight > inline void _add( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * base, THeight height, SkipElement< TObject, TModus, TSpec, TStructuring > ** search_path );       	// "projects/library/seqan/chaining/skip_list_base.h"(803)

//____________________________________________________________________________
// _add_max

template <typename TObject, typename TSpec, typename TStructuring, typename THeight > inline void _add_max( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > & list, SkipBaseElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * base, THeight height, SkipElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > ** search_path );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(282)

//____________________________________________________________________________
// _begin_default

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Iterator< SkipList< TObject, TModus, TSpec, TStructuring > , Standard >::Type _begin_default( SkipList< TObject, TModus, TSpec, TStructuring > & me, Standard);       	// "projects/library/seqan/chaining/skip_list_impl.h"(109)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Iterator< SkipList< TObject, TModus, TSpec, TStructuring > , Standard >::Type _begin_default( SkipList< TObject, TModus, TSpec, TStructuring > const & me, Standard);       	// "projects/library/seqan/chaining/skip_list_impl.h"(118)

//____________________________________________________________________________
// _bottomSearch

template <typename TObject, typename TModus, typename TSpec, typename TResultSet > void _bottomSearch( SkipList< TObject, TModus, RT< TSpec >, Deferred > * list, TObject * left_border, TObject * right_border, TResultSet & results );       	// "projects/library/seqan/chaining/rt_sl_def_algos.h"(76)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TResultSet > void _bottomSearch( SkipList< TObject, TModus, RT< TSpec >, TStructuring > * list, TObject * left_border, TObject * right_border, TResultSet & results );       	// "projects/library/seqan/chaining/rt_sl_compl_algos.h"(108)

//____________________________________________________________________________
// _buildAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _buildAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me, SkipList< TObject, TModus, RT< TSpec >, TStructuring > * list, TSize dim );       	// "projects/library/seqan/chaining/rt_skip_element.h"(73)

//____________________________________________________________________________
// _buildAssocStruct_left

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _buildAssocStruct_left( SkipList< TObject, TModus, RT< TSpec >, TStructuring > * me, SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * left, SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * right, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(310)

//____________________________________________________________________________
// _buildAssocStruct_right

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _buildAssocStruct_right( SkipList< TObject, TModus, RT< TSpec >, TStructuring > * me, SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * left, SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * right, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(325)

//____________________________________________________________________________
// _buildMaxTowers

template <typename TObject, typename TSpec, typename TStructuring > void _buildMaxTowers( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > & list );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(229)

//____________________________________________________________________________
// _buildTowers

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > void _buildTowers( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & list, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_compl_algos.h"(33)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > void _buildTowers( SkipList< TObject, TModus, TSpec, TStructuring > & list );       	// "projects/library/seqan/chaining/skip_list_base.h"(451)

//____________________________________________________________________________
// _build_chain_environment

template <typename FragType, typename TSource, typename TMetas, typename TWPoints, typename TCPoints, typename TSpec > inline void _build_chain_environment( TSource & source, TMetas & metas, TWPoints & wPoints, TCPoints & cPoints, FragType & startingFrag, FragType & endFrag, TSpec & spec );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(355)
template <typename FragType, typename TSource, typename TMetas, typename TWPoints, typename TPoints, typename TPerm, typename TSpec > inline void _build_chain_environment( TSource & source, TMetas & metas, TWPoints & wPoints, TPoints & tPoints, FragType & startingFrag, FragType & endFrag, TPerm & perm, typename Size< FragType >::Type fac, TSpec & spec);       	// "projects/library/seqan/chaining/tree_chain_utils.h"(422)

//____________________________________________________________________________
// _build_chain_trees

template <typename TTrees, typename TTPoints, typename TSize > void _build_chain_trees( TTrees & trees, TTPoints & tPoints, TSize dim, TSize facValue );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(502)

//____________________________________________________________________________
// _calcPivot

template <typename TObject, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * _calcPivot( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > & base );       	// "projects/library/seqan/chaining/skip_list_base.h"(220)
template <typename TObject, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, Static, TSpec, TStructuring > * _calcPivot( SkipBaseElement< TObject, Static, TSpec, TStructuring > & base );       	// "projects/library/seqan/chaining/skip_list_base.h"(238)

//____________________________________________________________________________
// _chainTransformCoords

template <typename FragType, typename SpecType, typename TPerm > inline void _chainTransformCoords( _ChainPoint< FragType, SpecType > & point_src, _ChainPoint< FragType, SpecType > & point_dst, TPerm & perm );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(103)

//____________________________________________________________________________
// _chainTransformCoordsSearch

template <typename FragType, typename SpecType, typename TPerm > inline void _chainTransformCoordsSearch( _ChainPoint< FragType, SpecType > & point_src, _ChainPoint< FragType, SpecType > & point_dst, TPerm & perm );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(121)

//____________________________________________________________________________
// _chain_trace

template <typename TDest, typename TMetas > typename Weight< typename Value< TDest >::Type >::Type _chain_trace( TDest & dest, TMetas & metas );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(301)

//____________________________________________________________________________
// _checkAssocThresh

template <typename TObject, typename TSpec, typename TStructuring > inline bool _checkAssocThresh( SkipBaseElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * first, SkipBaseElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * second );       	// "projects/library/seqan/chaining/rmt_base.h"(174)
template <typename TObject, typename TSpec, typename TStructuring > inline bool _checkAssocThresh( SkipBaseElement< TObject, Static, TSpec, TStructuring > * first, SkipBaseElement< TObject, Static, TSpec, TStructuring > * second );       	// "projects/library/seqan/chaining/rt_base.h"(103)

//____________________________________________________________________________
// _checkBaseElementsLeft

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize, typename TKey, typename TResultSet > inline SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * _checkBaseElementsLeft( SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * base, TObject * left_border, TObject * right_border, TSize dim, TKey left_theKey, TKey right_theKey, TResultSet & results );       	// "projects/library/seqan/chaining/rt_common_algos.h"(98)

//____________________________________________________________________________
// _checkBaseElementsLeftBottom

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey, typename TResultSet > inline SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * _checkBaseElementsLeftBottom( SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * base, TObject * left_border, TObject * right_border, TKey left_theKey, TKey right_theKey, TResultSet & results );       	// "projects/library/seqan/chaining/rt_common_algos.h"(131)

//____________________________________________________________________________
// _checkBaseElementsRight

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize, typename TKey, typename TResultSet > inline void _checkBaseElementsRight( SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * base, TObject * left_border, TObject * right_border, TSize dim, TKey right_theKey, TResultSet & results );       	// "projects/library/seqan/chaining/rt_common_algos.h"(163)

//____________________________________________________________________________
// _clearSearchPath

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _clearSearchPath( _SearchPath< TObject, TModus, TSpec, TStructuring > & sp, TSize size );       	// "projects/library/seqan/chaining/skip_list_base.h"(92)

//____________________________________________________________________________
// _collectAssocStructs

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize, typename TKey, typename TResultSet > inline SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * _collectAssocStructs( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * tower_buffer, TObject * left_border, TObject * right_border, TSize dim, TKey search_theKey, SkipList< TObject, TModus, RT< TSpec >, TStructuring > * list, TResultSet & results );       	// "projects/library/seqan/chaining/rt_common_algos.h"(70)

//____________________________________________________________________________
// _completeBuild

template <typename TObject, typename TSpec, typename TStructuring > inline void _completeBuild( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > & list, typename Size< TObject >::Type dim );       	// "projects/library/seqan/chaining/rmt_compl_algos.h"(29)
template <typename TObject, typename TSpec > inline void _completeBuild( SkipList< TObject, Static, RT< MaxTree< TSpec > >, Deferred > & list, typename Size< TObject >::Type dim );       	// "projects/library/seqan/chaining/rmt_def_algos.h"(19)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _completeBuild( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & list, TSize dim );       	// "projects/library/seqan/chaining/rt_common_algos.h"(17)
template <typename TObject, typename TModus, typename TSpec, typename TSize > inline void _completeBuild( SkipList< TObject, TModus, RT< TSpec >, Deferred > & list, TSize dim );       	// "projects/library/seqan/chaining/rt_common_algos.h"(27)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _completeBuild( SkipList< TObject, TModus, TSpec, TStructuring > & list );       	// "projects/library/seqan/chaining/skip_list_base.h"(484)
template <typename TObject, typename TModus, typename TSpec > inline void _completeBuild( SkipList< TObject, TModus, TSpec, Deferred > & list );       	// "projects/library/seqan/chaining/skip_list_base.h"(494)

//____________________________________________________________________________
// _compute_chain

template <typename TSource, typename TDest, typename TScoreValue, typename TScoreType, typename TStructuring, typename TCostModell, typename TSpec > TScoreValue _compute_chain( TSource & source, TDest & dest, TCostModell cost, Score< TScoreValue, TScoreType > const & score_, Chainer tag, TStructuring structuring, TSpec spec );       	// "projects/library/seqan/chaining/tree_chain.h"(19)
template <typename TSource, typename TDest, typename TScoreValue, typename TScoreType, typename TStructuring, typename TSpec > TScoreValue _compute_chain( TSource & source, TDest & dest, G_SoP_Cost cost, Score< TScoreValue, TScoreType > const & score_, Chainer tag, TStructuring structuring, TSpec spec );       	// "projects/library/seqan/chaining/tree_chain_sop.h"(19)

//____________________________________________________________________________
// _connect

template <typename TObject, typename TModus, typename TSpec, typename TSize > inline void _connect( SkipList< TObject, TModus, RT< TSpec >, Deferred > & list, SkipBaseElement< TObject, TModus, RT< TSpec >, Deferred > * base, TSize height, SkipElement< TObject, TModus, RT< TSpec >, Deferred > ** search_path, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(234)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam, typename TSize > inline void _connect( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * base, TSize height, SkipElement< TObject, TModus, TSpec, TStructuring > ** search_path, TParam & param );       	// "projects/library/seqan/chaining/skip_list_base.h"(781)

//____________________________________________________________________________
// _connect_actualize

template <typename TObject, typename TModus, typename TSpec, typename TSize > inline void _connect_actualize( SkipList< TObject, TModus, RT< MaxTree< TSpec > >, Complete > & list, SkipBaseElement< TObject, TModus, RT< MaxTree< TSpec > >, Complete > * base, TSize height, SkipElement< TObject, TModus, RT< MaxTree< TSpec > >, Complete > ** search_path, TSize dim );       	// "projects/library/seqan/chaining/rmt_compl_algos.h"(71)
template <typename TObject, typename TModus, typename TSpec, typename TSize > inline void _connect_actualize( SkipList< TObject, TModus, RT< TSpec >, Deferred > & list, SkipBaseElement< TObject, TModus, RT< TSpec >, Deferred > * base, TSize height, SkipElement< TObject, TModus, RT< TSpec >, Deferred > ** search_path, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(210)
template <typename TObject, typename TModus, typename TSpec, typename TSize > inline void _connect_actualize( SkipList< TObject, TModus, RT< TSpec >, SemiDeferred > & list, SkipBaseElement< TObject, TModus, RT< TSpec >, SemiDeferred > * base, TSize height, SkipElement< TObject, TModus, RT< TSpec >, SemiDeferred > ** search_path, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(256)
template <typename TObject, typename TModus, typename TSpec, typename TSize > inline void _connect_actualize( SkipList< TObject, TModus, RT< TSpec >, Complete > & list, SkipBaseElement< TObject, TModus, RT< TSpec >, Complete > * base, TSize height, SkipElement< TObject, TModus, RT< TSpec >, Complete > ** search_path, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(281)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam, typename TSize > inline void _connect_actualize( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * base, TSize height, SkipElement< TObject, TModus, TSpec, TStructuring > ** search_path, TParam & param );       	// "projects/library/seqan/chaining/skip_list_base.h"(758)

//____________________________________________________________________________
// _connect_actualize_max

template <typename TObject, typename TSpec, typename TStructuring, typename TSize, typename TKey > void _connect_actualize_max( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > & list, SkipBaseElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * base, TSize height, TKey searchKey, SkipElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > ** search_path, TObject * max_obj );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(200)

//____________________________________________________________________________
// _costG1

template <typename FragType, typename TScore, typename TSize > typename Weight< FragType >::Type _costG1( _MetaFragment< FragType > & upper, _MetaFragment< FragType > & lower, TScore const & score, TSize dim );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(219)

//____________________________________________________________________________
// _costGSoP

template <typename FragType, typename TItPerm, typename TScoreValue, typename TScoreType, typename TSize > typename Weight< FragType >::Type _costGSoP( _MetaFragment< FragType > & upper, _MetaFragment< FragType > & lower, Score< TScoreValue, TScoreType > const & score, TItPerm permBeg, TItPerm permEnd, TSize dim );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(237)

//____________________________________________________________________________
// _create

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TContainer, typename TSize > void _create( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & me, TContainer & data, RangeTree< TObject, TModus, RT< TSpec >, TStructuring > & Tree, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(88)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > void _create( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & me, SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * first, SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * last, RangeTree< TObject, TModus, RT< TSpec >, TStructuring > & Tree, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(113)

//____________________________________________________________________________
// _createAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _createAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me, SkipList< TObject, TModus, RT< TSpec >, TStructuring > * list, TSize dim );       	// "projects/library/seqan/chaining/rt_skip_element.h"(149)

//____________________________________________________________________________
// _deleteAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _deleteAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me );       	// "projects/library/seqan/chaining/rt_skip_element.h"(102)

//____________________________________________________________________________
// _deleteBase

template <typename TObject, typename TSpec, typename TStructuring > void _deleteBase( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > *& base );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(318)

//____________________________________________________________________________
// _deleteSearchFrom

template <typename TObject, typename TSpec, typename TStructuring, typename TParam > SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * _deleteSearchFrom( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, typename Key< SkipList< TObject, Dynamic, TSpec, TStructuring > >::Type theKey, SkipElement< TObject, Dynamic, TSpec, TStructuring > ** search_path, TParam & param );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(233)

//____________________________________________________________________________
// _deleteTower

template <typename TObject, typename TSpec, typename TStructuring > void _deleteTower( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, SkipElement< TObject, Dynamic, TSpec, TStructuring > ** search_path, SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * base, typename Size< SkipList< TObject, Dynamic, TSpec, TStructuring > >::Type height );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(294)

//____________________________________________________________________________
// _delete_chain_trees

template <typename TTrees, typename TSize > void _delete_chain_trees( TTrees & trees, TSize facValue );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(519)

//____________________________________________________________________________
// _end_default

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Iterator< SkipList< TObject, TModus, TSpec, TStructuring >, Standard>::Type _end_default( SkipList< TObject, TModus, TSpec, TStructuring > & me, Standard);       	// "projects/library/seqan/chaining/skip_list_impl.h"(148)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Iterator< SkipList< TObject, TModus, TSpec, TStructuring > const, Standard>::Type _end_default( SkipList< TObject, TModus, TSpec, TStructuring > const & me, Standard);       	// "projects/library/seqan/chaining/skip_list_impl.h"(156)

//____________________________________________________________________________
// _findTowerTop

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TResultSet, typename TSize, typename TKey > inline SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * _findTowerTop( SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * base_buffer, SkipList< TObject, TModus, RT< TSpec >, TStructuring > * list, TObject * left_border, TObject * right_border, TSize dim, TKey theKey, TResultSet & results );       	// "projects/library/seqan/chaining/rt_common_algos.h"(47)

//____________________________________________________________________________
// _fingerSearch

template <typename TObject, typename TModus, typename TSpec, typename TResultSet, typename TSize > void _fingerSearch( SkipList< TObject, TModus, RT< TSpec >, Deferred > * list, TObject * left_border, TObject * right_border, TSize dim, TResultSet & results );       	// "projects/library/seqan/chaining/rt_sl_def_algos.h"(32)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TResultSet, typename TSize > void _fingerSearch( SkipList< TObject, TModus, RT< TSpec >, TStructuring > * list, TObject * left_border, TObject * right_border, TSize dim, TResultSet & results );       	// "projects/library/seqan/chaining/rt_sl_compl_algos.h"(80)

//____________________________________________________________________________
// _geomRand

template <typename T > inline T _geomRand( );       	// "projects/library/seqan/chaining/geom_distribution.h"(24)

//____________________________________________________________________________
// _getAssoc

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipList< TObject, TModus, TSpec, TStructuring > * _getAssoc( _RangeMaxCargo< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/rmt_skip_element.h"(26)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipList< TObject, TModus, TSpec, TStructuring > * _getAssoc( _RangeCargo< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_skip_element.h"(26)

//____________________________________________________________________________
// _getAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipList< TObject, TModus, RT< TSpec >, TStructuring > * _getAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me );       	// "projects/library/seqan/chaining/rt_skip_element.h"(53)

//____________________________________________________________________________
// _getBaseAlloc

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline Allocator< SimpleAlloc<> > & _getBaseAlloc( RangeTree< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_base.h"(178)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline Allocator< SimpleAlloc<> > & _getBaseAlloc( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_sl_base.h"(66)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline Allocator< ClassPool< SkipBaseElement< TObject, TModus, TSpec, TStructuring >, Unlimited > > & _getBaseAlloc( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(301)

//____________________________________________________________________________
// _getBaseStore

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _getBaseStore( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(343)

//____________________________________________________________________________
// _getCount

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Size< SkipList< TObject, TModus, TSpec, TStructuring > >::Type _getCount( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(732)

//____________________________________________________________________________
// _getCurrentLayer

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Size< SkipList< TObject, TModus, TSpec, TStructuring > >::Type _getCurrentLayer( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(362)

//____________________________________________________________________________
// _getDown

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _getDown( SkipElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_element.h"(94)

//____________________________________________________________________________
// _getElementAlloc

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline Allocator< ClassPool< SkipElement< TObject, TModus, RT< TSpec >, TStructuring >, Limited > > & _getElementAlloc( RangeTree< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_base.h"(162)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline Allocator< ClassPool< SkipElement< TObject, TModus, RT< TSpec >, TStructuring >, Limited > > & _getElementAlloc( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_sl_base.h"(49)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline Allocator< ClassPool< SkipElement< TObject, TModus, TSpec, TStructuring >, Limited > > & _getElementAlloc( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(291)

//____________________________________________________________________________
// _getFrag

template <typename TFragType, typename TSpec > inline TFragType & _getFrag( _ChainPoint< TFragType, TSpec > & me );       	// "projects/library/seqan/chaining/chain_point.h"(81)
template <typename TFragType, typename TSpec > inline TFragType & _getFrag( const _ChainPoint< TFragType, TSpec > & me );       	// "projects/library/seqan/chaining/chain_point.h"(89)
template <typename TFragType > inline TFragType & _getFrag( _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(47)
template <typename TFragType > inline TFragType & _getFrag( const _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(57)
template <typename TFragType > inline TFragType & _getFrag( _MetaFragment< TFragType > & me );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(72)
template <typename TFragType > inline TFragType & _getFrag( const _MetaFragment< TFragType > & me );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(79)

//____________________________________________________________________________
// _getHeight

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Size< SkipList< TObject, TModus, TSpec, TStructuring > >::Type _getHeight( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(656)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline typename Size< SkipElement< TObject, TModus, TSpec, TStructuring > >::Type _getHeight( SkipElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_element.h"(202)

//____________________________________________________________________________
// _getInitialState

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline bool _getInitialState( SkipList< TObject, TModus, TSpec, TStructuring > & list );       	// "projects/library/seqan/chaining/skip_list_base.h"(123)

//____________________________________________________________________________
// _getLBorderObj

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline TObject * _getLBorderObj( RangeTree< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_base.h"(188)

//____________________________________________________________________________
// _getLeft

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _getLeft( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(492)
template <typename TObject, typename TModus, typename TSpec > inline SkipBaseElement< TObject, TModus, TSpec, Deferred > * _getLeft( SkipBaseElement< TObject, TModus, TSpec, Deferred > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(500)

//____________________________________________________________________________
// _getLeftSideStore

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipElement< TObject, TModus, TSpec, TStructuring > * _getLeftSideStore( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(333)

//____________________________________________________________________________
// _getList

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipList< TObject, TModus, RT< TSpec >, TStructuring > * _getList( RangeTree< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_base.h"(206)

//____________________________________________________________________________
// _getListAlloc

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline Allocator< ClassPool< SkipList< TObject, TModus, RT< TSpec >, TStructuring >, Unlimited > > & _getListAlloc( RangeTree< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_base.h"(170)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline Allocator< ClassPool< SkipList< TObject, TModus, RT< TSpec >, TStructuring >, Unlimited > > & _getListAlloc( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_sl_base.h"(58)

//____________________________________________________________________________
// _getMaxObject

template <typename TObject, typename TSpec, typename TStructuring > inline TObject * _getMaxObject( _RangeMaxCargo< TObject, Static, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/rmt_skip_element.h"(44)
template <typename TObject,typename TSpec, typename TStructuring > inline TObject * _getMaxObject( SkipElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * me );       	// "projects/library/seqan/chaining/rmt_skip_element.h"(59)

//____________________________________________________________________________
// _getMaximalSLTowerHeight

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Size< SkipList< TObject, TModus, RT< TSpec >, TStructuring > >::Type _getMaximalSLTowerHeight( RangeTree< TObject, TModus, RT< TSpec >, TStructuring > & rt );       	// "projects/library/seqan/chaining/rt_base.h"(296)
template <typename TNumber > inline TNumber _getMaximalSLTowerHeight( TNumber elements );       	// "projects/library/seqan/chaining/skip_list_base.h"(155)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Size< SkipList< TObject, TModus, TSpec, TStructuring > >::Type _getMaximalSLTowerHeight( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_base.h"(164)

//____________________________________________________________________________
// _getNext

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _getNext( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(626)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline SkipElement< TObject, TModus, TSpec, TStructuring > * _getNext( SkipElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_element.h"(158)

//____________________________________________________________________________
// _getNextBlock

template <typename TClass, typename TSpec, typename TParentAlloc > inline TClass * _getNextBlock( Allocator< ClassPool< TClass, TSpec, TParentAlloc > > & me, TClass & block );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(69)

//____________________________________________________________________________
// _getPerm

template <typename TData, typename TItPerm, typename TSize > inline void _getPerm( TData * values, TItPerm perm, TSize length );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(58)

//____________________________________________________________________________
// _getPermDifference

template <typename TData, typename TSize, typename FragType > void _getPermDifference( TData * values, TSize dim, FragType & upper, FragType & lower );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(86)

//____________________________________________________________________________
// _getPred

template <typename TFragType > inline _MetaFragment< TFragType > & _getPred( _MetaFragment< TFragType > & me );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(87)
template <typename TFragType > inline _MetaFragment< TFragType > & _getPred( const _MetaFragment< TFragType > & me );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(94)
template <typename TObject, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, Static, TSpec, TStructuring > * _getPred( SkipBaseElement< TObject, Static, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(422)
template <typename TObject, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * _getPred( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(430)

//____________________________________________________________________________
// _getRBorderObj

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline TObject * _getRBorderObj( RangeTree< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_base.h"(197)

//____________________________________________________________________________
// _getRight

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _getRight( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(548)
template <typename TObject, typename TSpec > inline SkipBaseElement< TObject, Dynamic, TSpec, Deferred > * _getRight( SkipBaseElement< TObject, Dynamic, TSpec, Deferred > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(557)
template <typename TObject, typename TSpec > inline SkipBaseElement< TObject, Static, TSpec, Deferred > * _getRight( SkipBaseElement< TObject, Static, TSpec, Deferred > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(565)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline SkipElement< TObject, TModus, TSpec, TStructuring > * _getRight(SkipElement< TObject, TModus, TSpec, TStructuring > & me);       	// "projects/library/seqan/chaining/skip_element.h"(68)

//____________________________________________________________________________
// _getRightBorder

template <typename TObject, typename TSpec, typename TStructuring > inline SkipElement< TObject, Static, RT< TSpec >, TStructuring > * _getRightBorder( SkipList< TObject, Static, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_sl_base.h"(28)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _getRightBorder( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(323)

//____________________________________________________________________________
// _getRoot

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipElement< TObject, TModus, TSpec, TStructuring > * _getRoot( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(282)

//____________________________________________________________________________
// _getSearchPath

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam > inline SkipElement< TObject, TModus, RT< TSpec >, TStructuring > ** _getSearchPath( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & me, TParam dim );       	// "projects/library/seqan/chaining/rt_sl_def_algos.h"(11)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipElement< TObject, TModus, TSpec, TStructuring > ** _getSearchPath( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(352)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipElement< TObject, TModus, TSpec, TStructuring > ** _getSearchPath( _SearchPath< TObject, TModus, TSpec, TStructuring > & sp );       	// "projects/library/seqan/chaining/skip_list_base.h"(83)

//____________________________________________________________________________
// _getSucc

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _getSucc( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(345)
template <typename TObject, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * _getSucc( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(353)

//____________________________________________________________________________
// _getUp

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipElement< TObject, TModus, TSpec, TStructuring > & _getUp( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(324)

//____________________________________________________________________________
// _hasAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline bool _hasAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me );       	// "projects/library/seqan/chaining/rt_skip_element.h"(121)

//____________________________________________________________________________
// _hasBigAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline bool _hasBigAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me );       	// "projects/library/seqan/chaining/rt_skip_element.h"(137)

//____________________________________________________________________________
// _hasSmallAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline bool _hasSmallAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me );       	// "projects/library/seqan/chaining/rt_skip_element.h"(129)

//____________________________________________________________________________
// _incKey

template <typename TFragType, typename TSpec, typename TSize > inline void _incKey( _ChainPoint< TFragType, TSpec > & me, TSize dim );       	// "projects/library/seqan/chaining/chain_point.h"(72)

//____________________________________________________________________________
// _initBases

template <typename TObject, typename TSpec, typename TStructuring, typename TIter, typename TSize > inline void _initBases( SkipList< TObject, Static, RT< TSpec >, TStructuring > & list, SkipBaseElement< TObject, Static, RT< TSpec >, TStructuring > * firstBase, SkipBaseElement< TObject, Static, RT< TSpec >, TStructuring > *& lastBase, TIter & firstData, TIter & lastData, TSize numEntries, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(138)
template <typename TObject, typename TSpec, typename TStructuring, typename TIter, typename TSize > inline void _initBases( SkipList< TObject, Static, TSpec, TStructuring > & list, SkipBaseElement< TObject, Static, TSpec, TStructuring > * firstBase, SkipBaseElement< TObject, Static, TSpec, TStructuring > *& lastBase, TIter & firstData, TIter & lastData, TSize numEntries );       	// "projects/library/seqan/chaining/skip_list_base.h"(883)
template <typename TObject, typename TSpec, typename TStructuring, typename TIter, typename TSize > inline void _initBases( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * firstBase, SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > *& lastBase, TIter & firstData, TIter & lastData, TSize numEntries );       	// "projects/library/seqan/chaining/skip_list_base.h"(913)

//____________________________________________________________________________
// _initPerm

template <typename TPerm, typename TSize > inline void _initPerm( TPerm & perm, TSize length );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(30)

//____________________________________________________________________________
// _initSL

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _initSL( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & list, SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * first_base, SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * last_base, TSize numEntries, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_base.h"(166)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _initSL( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * first_base, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * last_base, TSize numEntries );       	// "projects/library/seqan/chaining/skip_list_base.h"(946)

//____________________________________________________________________________
// _init_starting_frag

template <typename FragType, typename TSize > inline void _init_starting_frag( FragType & frag, TSize dim );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(330)

//____________________________________________________________________________
// _insertBack

template <typename TObject, typename TSpec, typename TStructuring, typename TParam > void _insertBack( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, TObject & obj, TParam & param );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(133)

//____________________________________________________________________________
// _insertInPlace

template <typename TObject, typename TSpec, typename TStructuring, typename TParam > void _insertInPlace( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, TObject & obj, TParam & param );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(157)

//____________________________________________________________________________
// _isBegin

template <typename TFragType > inline bool _isBegin( _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(100)
template <typename TFragType > inline bool _isBegin( const _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(107)

//____________________________________________________________________________
// _isEnd

template <typename TFragType > inline bool _isEnd( _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(86)
template <typename TFragType > inline bool _isEnd( const _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(93)

//____________________________________________________________________________
// _maxPriority

template <typename FragType, typename SpecType, typename TScore, typename TSize > inline typename Weight< FragType >::Type _maxPriority( _MetaFragment< FragType > & last_meta, _MetaFragment< FragType > & current_meta, _ChainPoint< FragType, SpecType > & point, G_0_Cost cost, TScore const & score_, TSize dim );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(156)
template <typename FragType, typename SpecType, typename TScore, typename TSize > inline typename Weight< FragType >::Type _maxPriority( _MetaFragment< FragType > & last_meta, _MetaFragment< FragType > & current_meta, _ChainPoint< FragType, SpecType > & point, G_1_Cost cost, TScore const & score_, TSize dim );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(170)

//____________________________________________________________________________
// _meta

template <typename TFragType, typename TSpec > inline _MetaFragment< TFragType > & _meta( _ChainPoint< TFragType, TSpec > & me );       	// "projects/library/seqan/chaining/chain_point.h"(98)
template <typename TFragType, typename TSpec > inline _MetaFragment< TFragType > & _meta( const _ChainPoint< TFragType, TSpec > & me );       	// "projects/library/seqan/chaining/chain_point.h"(105)
template <typename TFragType > inline _MetaFragment< TFragType > & _meta( _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(67)

//____________________________________________________________________________
// _noInitialState

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _noInitialState( SkipList< TObject, TModus, TSpec, TStructuring > & list );       	// "projects/library/seqan/chaining/skip_list_base.h"(131)

//____________________________________________________________________________
// _performDestructorAction

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _performDestructorAction( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_skip_element.h"(201)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline void _performDestructorAction( SkipElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_element.h"(265)

//____________________________________________________________________________
// _performRMQ

template <typename TObject, typename TSpec, typename TStructuring, typename TBorder, typename TSize, typename TKey > void _performRMQ( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * list, TBorder & borderObj, TSize dim, TKey searchKey, TObject *& maxObject );       	// "projects/library/seqan/chaining/rmt_compl_algos.h"(103)
template <typename TObject, typename TSpec, typename TBorder, typename TSize, typename TKey > void _performRMQ( SkipList< TObject, Static, RT< MaxTree< TSpec > >, Complete > * list, TBorder & borderObj, TSize dim, TKey searchKey, TObject *& maxObject );       	// "projects/library/seqan/chaining/rmt_compl_algos.h"(148)
template <typename TObject, typename TSpec, typename TStructuring, typename TBorder > void _performRMQ( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * list, TBorder & obj, typename Key< TObject >::Type searchKey, TObject *& maxObject );       	// "projects/library/seqan/chaining/rmt_compl_algos.h"(190)
template <typename TObject, typename TSpec, typename TBorder, typename TSize, typename TKey > void _performRMQ( SkipList< TObject, Static, RT< MaxTree< TSpec > >, Deferred > * list, TBorder & borderObj, TSize dim, TKey searchKey, TObject *& maxObject );       	// "projects/library/seqan/chaining/rmt_def_algos.h"(45)

//____________________________________________________________________________
// _performSmallRMQ

template <typename TObject, typename TSpec, typename TStructuring, typename TBorder > inline void _performSmallRMQ( SkipElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * elem, typename Size< TObject >::Type dim, TBorder & border, TObject *& max_object );       	// "projects/library/seqan/chaining/rmt_compl_algos.h"(235)

//____________________________________________________________________________
// _processRMQ

template <typename TObject, typename TSpec, typename TStructuring, typename TBorder > inline void _processRMQ( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * list, typename Size< TObject >::Type dim, TBorder & borderObj, TObject *& maxObject );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(54)

//____________________________________________________________________________
// _pushBack

template <typename TTarget, typename TSource > inline void _pushBack( TTarget & target, TSource const & source );       	// "projects/library/seqan/chaining/rt_base.h"(111)

//____________________________________________________________________________
// _renewConnects

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _renewConnects( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & elem, SkipBaseElement< TObject, TModus, TSpec, TStructuring > & pivot, TSize elem_count, TSize i_count );       	// "projects/library/seqan/chaining/skip_list_base.h"(407)
template <typename TObject, typename TSpec, typename TSize > inline void _renewConnects( SkipBaseElement< TObject, Dynamic, TSpec, Deferred > & elem, SkipBaseElement< TObject, Dynamic, TSpec, Deferred > & pivot, TSize elem_count, TSize i_count );       	// "projects/library/seqan/chaining/skip_list_base.h"(420)

//____________________________________________________________________________
// _renewDynConnects

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _renewDynConnects( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & elem, SkipBaseElement< TObject, TModus, TSpec, TStructuring > & pivot, TSize elem_count, TSize i_count );       	// "projects/library/seqan/chaining/skip_list_base.h"(368)
template <typename TObject, typename TModus, typename TSpec, typename TSize > inline void _renewDynConnects( SkipBaseElement< TObject, TModus, TSpec, Deferred > & elem, SkipBaseElement< TObject, TModus, TSpec, Deferred > & pivot, TSize elem_count, TSize i_count );       	// "projects/library/seqan/chaining/skip_list_base.h"(377)
template <typename TObject, typename TSpec, typename TSize > inline void _renewDynConnects( SkipBaseElement< TObject, Dynamic, TSpec, Deferred > & elem, SkipBaseElement< TObject, Dynamic, TSpec, Deferred > & pivot, TSize elem_count, TSize i_count );       	// "projects/library/seqan/chaining/skip_list_base.h"(390)

//____________________________________________________________________________
// _renewLeftTower

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > void _renewLeftTower( SkipList< TObject, TModus, TSpec, TStructuring > & list );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(35)

//____________________________________________________________________________
// _renewSearchPath

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _renewSearchPath( SkipList< TObject, TModus, TSpec, TStructuring > & list, TSize old_size, TSize new_size );       	// "projects/library/seqan/chaining/skip_list_base.h"(105)

//____________________________________________________________________________
// _resetPerm

template <typename TPerm > inline void _resetPerm( TPerm & perm );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(41)

//____________________________________________________________________________
// _scanAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TResultsSet, typename TSize > inline void _scanAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me, SkipList< TObject, TModus, RT< TSpec >, TStructuring > * list, TObject * left_border, TObject * right_border, TSize dim, TResultsSet & results );       	// "projects/library/seqan/chaining/rt_skip_element.h"(170)

//____________________________________________________________________________
// _searchFrom

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam, typename TKey > SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _searchFrom( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipElement< TObject, TModus, TSpec, TStructuring > * layer_element, TKey theKey, SkipElement< TObject, TModus, TSpec, TStructuring > ** search_path, TParam & param );       	// "projects/library/seqan/chaining/skip_list_base.h"(512)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam, typename TKey > SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _searchFrom( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipElement< TObject, TModus, TSpec, TStructuring > * layer_element, TKey theKey, TParam & param );       	// "projects/library/seqan/chaining/skip_list_base.h"(565)

//____________________________________________________________________________
// _setAssoc

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setAssoc( _RangeMaxCargo< TObject, TModus, TSpec, TStructuring > & me, SkipList< TObject, TModus, TSpec, TStructuring > * list );       	// "projects/library/seqan/chaining/rmt_skip_element.h"(34)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setAssoc( _RangeCargo< TObject, TModus, TSpec, TStructuring > & me, SkipList< TObject, TModus, TSpec, TStructuring > * list);       	// "projects/library/seqan/chaining/rt_skip_element.h"(35)

//____________________________________________________________________________
// _setAssocStruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setAssocStruct( SkipElement< TObject, TModus, RT< TSpec >, TStructuring > * me, SkipList< TObject, TModus, RT< TSpec >, TStructuring > * list );       	// "projects/library/seqan/chaining/rt_skip_element.h"(62)

//____________________________________________________________________________
// _setCount

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _setCount( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, TSize count );       	// "projects/library/seqan/chaining/skip_base_element.h"(752)

//____________________________________________________________________________
// _setCurrentLayer

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _setCurrentLayer( SkipList< TObject, TModus, TSpec, TStructuring > & me, TSize layer );       	// "projects/library/seqan/chaining/skip_list_impl.h"(372)

//____________________________________________________________________________
// _setDefConnects

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setDefConnects( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * left, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * right );       	// "projects/library/seqan/chaining/skip_list_base.h"(850)
template <typename TObject, typename TSpec > inline void _setDefConnects( SkipBaseElement< TObject, Dynamic, TSpec, Deferred > * left, SkipBaseElement< TObject, Dynamic, TSpec, Deferred > * right );       	// "projects/library/seqan/chaining/skip_list_base.h"(859)

//____________________________________________________________________________
// _setDeferredCounts

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setDeferredCounts( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * preceding_elem, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * new_elem );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(70)
template <typename TObject, typename TModus, typename TSpec > inline void _setDeferredCounts( SkipList< TObject, TModus, TSpec, Deferred > & list, SkipBaseElement< TObject, TModus, TSpec, Deferred > * preceding_elem, SkipBaseElement< TObject, TModus, TSpec, Deferred > * new_elem );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(79)

//____________________________________________________________________________
// _setDown

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline void _setDown( SkipElement< TObject, TModus, TSpec, TStructuring > & me, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * down );       	// "projects/library/seqan/chaining/skip_element.h"(138)

//____________________________________________________________________________
// _setDynConnects

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setDynConnects( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * pred, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * succ );       	// "projects/library/seqan/chaining/skip_list_base.h"(830)
template <typename TObject, typename TSpec, typename TStructuring > inline void _setDynConnects( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * pred, SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * succ );       	// "projects/library/seqan/chaining/skip_list_base.h"(839)

//____________________________________________________________________________
// _setHeight

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _setHeight( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, TSize height );       	// "projects/library/seqan/chaining/skip_base_element.h"(676)

//____________________________________________________________________________
// _setLeft

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setLeft( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * left );       	// "projects/library/seqan/chaining/skip_base_element.h"(520)
template <typename TObject, typename TModus, typename TSpec > inline void _setLeft( SkipBaseElement< TObject, TModus, TSpec, Deferred > & me, SkipBaseElement< TObject, TModus, TSpec, Deferred > * left );       	// "projects/library/seqan/chaining/skip_base_element.h"(528)

//____________________________________________________________________________
// _setLeftPosition

template <typename TBorder, typename TSpec, typename TSize, typename TPosition > inline void _setLeftPosition( Fragment< TBorder, TSpec > & me, TSize dim, TPosition value );       	// "projects/library/seqan/chaining/fragment.h"(94)

//____________________________________________________________________________
// _setLength

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _setLength( SkipList< TObject, TModus, TSpec, TStructuring > & me, TSize num_elems );       	// "projects/library/seqan/chaining/skip_list_impl.h"(174)

//____________________________________________________________________________
// _setMaxInfty

template <typename TObject, typename TSize > inline void _setMaxInfty( TObject & me, TSize dim );       	// "projects/library/seqan/chaining/rt_base.h"(141)

//____________________________________________________________________________
// _setMaxObject

template <typename TObject, typename TSpec, typename TStructuring > inline void _setMaxObject( _RangeMaxCargo< TObject, Static, TSpec, TStructuring > & me, TObject * obj );       	// "projects/library/seqan/chaining/rmt_skip_element.h"(52)
template <typename TObject, typename TSpec, typename TStructuring > inline void _setMaxObject( SkipElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * me, TObject * maxObj );       	// "projects/library/seqan/chaining/rmt_skip_element.h"(67)

//____________________________________________________________________________
// _setMeta

template <typename TFragType, typename TSpec > inline void _setMeta( _ChainPoint< TFragType, TSpec > & me, _MetaFragment< TFragType > & meta );       	// "projects/library/seqan/chaining/chain_point.h"(114)
template <typename TFragType, typename TSpec > inline void _setMeta( const _ChainPoint< TFragType, TSpec > & me, _MetaFragment< TFragType > & meta );       	// "projects/library/seqan/chaining/chain_point.h"(122)
template <typename TFragType > inline void _setMeta( _WrapperPoint< TFragType > & me, _MetaFragment< TFragType > & meta );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(77)

//____________________________________________________________________________
// _setMinInfty

template <typename TObject, typename TSize > inline void _setMinInfty( TObject & me, TSize dim );       	// "projects/library/seqan/chaining/rt_base.h"(126)

//____________________________________________________________________________
// _setNext

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setNext( SkipList< TObject, TModus, TSpec, TStructuring > & me, SkipList< TObject, TModus, TSpec, TStructuring > * next );       	// "projects/library/seqan/chaining/skip_list_impl.h"(312)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setNext( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * next );       	// "projects/library/seqan/chaining/skip_base_element.h"(636)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline void _setNext( SkipElement< TObject, TModus, TSpec, TStructuring > & me, SkipElement< TObject, TModus, TSpec, TStructuring > * next );       	// "projects/library/seqan/chaining/skip_element.h"(182)

//____________________________________________________________________________
// _setNextBlock

template <typename TClass, typename TSpec, typename TParentAlloc > inline void _setNextBlock( Allocator< ClassPool< TClass, TSpec, TParentAlloc > > & me, TClass & dest, TClass * block );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(78)

//____________________________________________________________________________
// _setObject

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setObject( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, TObject * obj );       	// "projects/library/seqan/chaining/skip_base_element.h"(274)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setObject( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * data );       	// "projects/library/seqan/chaining/skip_base_element.h"(284)

//____________________________________________________________________________
// _setPred

template <typename TFragType > inline void _setPred( _MetaFragment< TFragType > & me, _MetaFragment< TFragType > & pred );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(103)
template <typename TFragType > inline void _setPred( const _MetaFragment< TFragType > & me, _MetaFragment< TFragType > & pred );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(111)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setPred( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * goPrevious );       	// "projects/library/seqan/chaining/skip_base_element.h"(466)
template <typename TObject, typename TSpec, typename TStructuring > inline void _setPred( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > & me, SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * goPrevious );       	// "projects/library/seqan/chaining/skip_base_element.h"(474)

//____________________________________________________________________________
// _setRight

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setRight( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * right );       	// "projects/library/seqan/chaining/skip_base_element.h"(602)
template <typename TObject, typename TSpec > inline void _setRight( SkipBaseElement< TObject, Static, TSpec, Deferred > & me, SkipBaseElement< TObject, Static, TSpec, Deferred > * right );       	// "projects/library/seqan/chaining/skip_base_element.h"(609)
template <typename TObject, typename TSpec > inline void _setRight( SkipBaseElement< TObject, Dynamic, TSpec, Deferred > & me, SkipBaseElement< TObject, Dynamic, TSpec, Deferred > * right );       	// "projects/library/seqan/chaining/skip_base_element.h"(617)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline void _setRight( SkipElement< TObject, TModus, TSpec, TStructuring > & me, SkipElement< TObject, TModus, TSpec, TStructuring > * right );       	// "projects/library/seqan/chaining/skip_element.h"(118)

//____________________________________________________________________________
// _setRightPosition

template <typename TBorder, typename TSpec, typename TSize, typename TPosition > inline void _setRightPosition( Fragment< TBorder, TSpec > & me, TSize dim, TPosition value );       	// "projects/library/seqan/chaining/fragment.h"(104)

//____________________________________________________________________________
// _setSucc

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setSucc( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * succ );       	// "projects/library/seqan/chaining/skip_base_element.h"(390)
template <typename TObject, typename TSpec, typename TStructuring > inline void _setSucc( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > & me, SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > * succ );       	// "projects/library/seqan/chaining/skip_base_element.h"(398)

//____________________________________________________________________________
// _setUp

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _setUp( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, SkipElement< TObject, TModus, TSpec, TStructuring > & up );       	// "projects/library/seqan/chaining/skip_base_element.h"(305)

//____________________________________________________________________________
// _sort

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _sort( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * elem, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * right );       	// "projects/library/seqan/chaining/skip_list_base.h"(261)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TExtraParam > SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _sort( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * elem, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * right_border, TExtraParam & param );       	// "projects/library/seqan/chaining/skip_list_base.h"(274)

//____________________________________________________________________________
// _sortRecursive

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TSize > inline void _sortRecursive( SkipList< TObject, TModus, RT< TSpec >, TStructuring > & list, SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * elem, SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > * right, TSize dim );       	// "projects/library/seqan/chaining/rt_sl_compl_algos.h"(19)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _sortRecursive( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * elem, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * right );       	// "projects/library/seqan/chaining/skip_list_base.h"(436)

//____________________________________________________________________________
// _sort_equals

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _sort_equals( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * elem );       	// "projects/library/seqan/chaining/skip_list_base.h"(310)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > inline void _sort_equals( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * elem, TKey theKey);       	// "projects/library/seqan/chaining/skip_list_base.h"(320)
template <typename TObject, typename TModus, typename TSpec, typename TKey > void _sort_equals( SkipList< TObject, TModus, TSpec, Deferred > & list, SkipBaseElement< TObject, TModus, TSpec, Deferred > * elem, TKey theKey);       	// "projects/library/seqan/chaining/skip_list_base.h"(329)

//____________________________________________________________________________
// _specialSearch

template <typename TObject, typename TModus, typename TSpec, typename TKey > inline SkipBaseElement< TObject, TModus, TSpec, Deferred > * _specialSearch( SkipList< TObject, TModus, TSpec, Deferred > & list, SkipElement< TObject, TModus, TSpec, Deferred > * layer_element, TKey theKey);       	// "projects/library/seqan/chaining/skip_list_base.h"(606)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _specialSearch( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipElement< TObject, TModus, TSpec, TStructuring > * layer_element, TKey theKey);       	// "projects/library/seqan/chaining/skip_list_base.h"(618)

//____________________________________________________________________________
// _split

template <typename TObject, typename TModus, typename TSpec, typename TParam, typename TKey > SkipBaseElement< TObject, TModus, TSpec, Deferred > * _split( SkipList< TObject, TModus, TSpec, Deferred > & list, SkipBaseElement< TObject, TModus, TSpec, Deferred > * base, TKey theKey, SkipElement< TObject, TModus, TSpec, Deferred > ** search_path, TParam & param );       	// "projects/library/seqan/chaining/skip_list_base.h"(704)

//____________________________________________________________________________
// _splitAction

template <typename TObject, typename TModus, typename TSpec, typename TParam, typename TKey > inline SkipBaseElement< TObject, TModus, TSpec, Deferred > * _splitAction( SkipList< TObject, TModus, TSpec, Deferred > & list, SkipBaseElement< TObject, TModus, TSpec, Deferred > * base, TKey theKey, SkipElement< TObject, TModus, TSpec, Deferred > ** search_path, TParam & param );       	// "projects/library/seqan/chaining/skip_list_base.h"(680)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam, typename TKey > inline SkipBaseElement< TObject, TModus, TSpec, TStructuring > * _splitAction( SkipList< TObject, TModus, TSpec, TStructuring > & list, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * base, TKey theKey, SkipElement< TObject, TModus, TSpec, TStructuring > ** search_path, TParam & param );       	// "projects/library/seqan/chaining/skip_list_base.h"(692)

//____________________________________________________________________________
// _swapBases

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void _swapBases( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & first, SkipBaseElement< TObject, TModus, TSpec, TStructuring > & second );       	// "projects/library/seqan/chaining/skip_list_base.h"(200)

//____________________________________________________________________________
// _testBruteForce

template <typename TObject, typename TSize > inline bool _testBruteForce( TObject & elem, TObject & first, TObject & second, TSize dim );       	// "projects/library/seqan/chaining/rt_base.h"(257)

//____________________________________________________________________________
// _testBruteForceMax

template <typename TObject, typename TSize > inline void _testBruteForceMax( TObject * elem, TObject * border, TObject *& max_object, TSize _dim );       	// "projects/library/seqan/chaining/rmt_base.h"(137)

//____________________________________________________________________________
// _testRange

template <typename TObject, typename TSize > inline bool _testRange( TObject & elem, TObject & first, TObject & second, TSize dim );       	// "projects/library/seqan/chaining/rt_base.h"(277)

//____________________________________________________________________________
// _testRangeMax

template <typename TObject, typename TBorder, typename TSize > inline void _testRangeMax( TObject * elem, TBorder * border, TObject *& max_object, TSize dim );       	// "projects/library/seqan/chaining/rmt_base.h"(155)

//____________________________________________________________________________
// _throwCoin

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename THeight > inline typename seqan::Size< SkipList< TObject, TModus, TSpec, TStructuring > >::Type _throwCoin( SkipList< TObject, TModus, TSpec, TStructuring > & list, THeight max_height);       	// "projects/library/seqan/chaining/skip_list_base.h"(175)

//____________________________________________________________________________
// activate

template <typename TObject, typename TSpec, typename TStructuring > inline void activate( RangeTree< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > & tree, TObject & obj );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(79)
template <typename TObject, typename TSpec, typename TStructuring, typename TWeight > inline void activate( RangeTree< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > & tree, TObject & obj, TWeight prio );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(88)

//____________________________________________________________________________
// allocate

template <typename TClass, typename TParentAlloc, typename TSize > void allocate( Allocator< ClassPool< TClass, Unlimited, TParentAlloc > > & me, TClass *& dest, TSize number );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(154)
template <typename TClass, typename TParentAlloc, typename TSize > void allocate( Allocator< ClassPool< TClass, Limited, TParentAlloc > > & me, TClass *& dest, TSize number );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(283)

//____________________________________________________________________________
// append

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam > inline void append( SkipList< TObject, TModus, TSpec, TStructuring > & me , TParam & param);       	// "projects/library/seqan/chaining/skip_list_impl.h"(37)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam1, typename TParam2 > inline void append( SkipList< TObject, TModus, TSpec, TStructuring > & me , TParam1 & param1, TParam2 & param2 );       	// "projects/library/seqan/chaining/skip_list_impl.h"(46)

//____________________________________________________________________________
// appendValue

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam > inline void appendValue( SkipList< TObject, TModus, TSpec, TStructuring > & me , TParam & param);       	// "projects/library/seqan/chaining/skip_list_impl.h"(54)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam1, typename TParam2 > inline void appendValue( SkipList< TObject, TModus, TSpec, TStructuring > & me , TParam1 & param1, TParam2 & param2 );       	// "projects/library/seqan/chaining/skip_list_impl.h"(63)

//____________________________________________________________________________
// assign

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam > inline void assign( SkipList< TObject, TModus, TSpec, TStructuring > & me, TParam & param);       	// "projects/library/seqan/chaining/skip_list_impl.h"(72)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam1, typename TParam2 > inline void assign( SkipList< TObject, TModus, TSpec, TStructuring > & me, TParam1 & param1, TParam2 & param2 );       	// "projects/library/seqan/chaining/skip_list_impl.h"(81)

//____________________________________________________________________________
// assignValue

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam > inline void assignValue( SkipList< TObject, TModus, TSpec, TStructuring > & me , TParam & param);       	// "projects/library/seqan/chaining/skip_list_impl.h"(89)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam1, typename TParam2 > inline void assignValue( SkipList< TObject, TModus, TSpec, TStructuring > & me , TParam1 & param1, TParam2 & param2 );       	// "projects/library/seqan/chaining/skip_list_impl.h"(98)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TValue> inline void assignValue( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * me, TValue const & _value);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(77)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TValue> inline void assignValue( SkipBaseElement< TObject, TModus, TSpec, TStructuring > const * me, TValue const & _value);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(87)

//____________________________________________________________________________
// capacity

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Size< SkipList< TObject, TModus, TSpec, TStructuring > >::Type capacity( SkipList< TObject, TModus, TSpec, TStructuring > & me);       	// "projects/library/seqan/chaining/skip_list_impl.h"(129)
template <typename TObject, typename TSpec, typename TStructuring > inline typename Size< SkipList< TObject, Dynamic, TSpec, TStructuring > >::Type capacity( SkipList< TObject, Dynamic, TSpec, TStructuring > & me);       	// "projects/library/seqan/chaining/skip_list_impl.h"(138)

//____________________________________________________________________________
// clear

template <typename TClass, typename TParentAlloc > inline void clear( Allocator< ClassPool< TClass, Unlimited, TParentAlloc > > & me );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(216)
template <typename TClass, typename TParentAlloc > void clear( Allocator< ClassPool< TClass, Limited, TParentAlloc > > & me );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(330)

//____________________________________________________________________________
// compute_chain

template <typename TSource, typename TDest, typename TScoreValue, typename TScoreType, typename TStructuring > TScoreValue compute_chain( TSource & source, TDest & dest, Score< TScoreValue, TScoreType > const & score_, Chainer tag, TStructuring structuring );       	// "projects/library/seqan/chaining/chain_base.h"(163)

//____________________________________________________________________________
// deallocate

template <typename TClass, typename TParentAlloc, typename TSize > inline void deallocate( Allocator< ClassPool< TClass, Unlimited, TParentAlloc > > & me, TClass * location, TSize count );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(206)
template <typename TClass, typename TParentAlloc, typename TSize > void deallocate( Allocator< ClassPool< TClass, Limited, TParentAlloc > > & me, TClass * location, TSize count );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(321)

//____________________________________________________________________________
// dimension

template <typename TFragType, typename TSpec > inline typename Size< TFragType >::Type dimension( _ChainPoint< TFragType, TSpec > & me );       	// "projects/library/seqan/chaining/chain_point.h"(129)
template <typename TFragType, unsigned int ISize > inline typename Size< TFragType >::Type dimension( _ChainPoint< TFragType, Array< ISize > > & me );       	// "projects/library/seqan/chaining/chain_point.h"(136)
template <typename TFragType > inline typename Size< TFragType >::Type dimension( const _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(114)
template <typename TBorder, typename TSpec > inline typename Size< Fragment< TBorder, TSpec > >::Type dimension( Fragment< TBorder, TSpec > & me );       	// "projects/library/seqan/chaining/fragment.h"(29)

//____________________________________________________________________________
// dump

template <typename TFragType > inline void dump( _MetaFragment< TFragType > & me );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(118)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void dump( SkipBaseElement< TObject, TModus, RT< TSpec >, TStructuring > & me );       	// "projects/library/seqan/chaining/rt_skip_base_element.h"(20)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline void dump( SkipElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_element.h"(294)

//____________________________________________________________________________
// erase

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > bool erase( SkipList< TObject, TModus, TSpec, TStructuring > & list, TKey theKey);       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(340)
template <typename TObject, typename TSpec, typename TStructuring, typename TKey > bool erase( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, TKey theKey );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(348)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > bool erase( SkipList< TObject, TModus, TSpec, TStructuring > & list, TObject & obj );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(370)
template <typename TObject, typename TSpec, typename TStructuring > bool erase( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, TObject & obj );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(380)

//____________________________________________________________________________
// fac

template <typename TSimpleType > inline TSimpleType fac( TSimpleType data );       	// "projects/library/seqan/chaining/tree_chain_utils.h"(16)

//____________________________________________________________________________
// getObject

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline TObject * getObject( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * me );       	// "projects/library/seqan/chaining/skip_base_element.h"(252)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline TObject * getObject( SkipElement< TObject, TModus, TSpec, TStructuring > * me );       	// "projects/library/seqan/chaining/skip_element.h"(48)

//____________________________________________________________________________
// getValue

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename GetValue< SkipBaseElement< TObject, TModus, TSpec, TStructuring > >::Type getValue( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(181)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename GetValue< SkipBaseElement< TObject, TModus, TSpec, TStructuring > const >::Type getValue( SkipBaseElement< TObject, TModus, TSpec, TStructuring > const & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(189)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename GetValue< SkipBaseElement< TObject, TModus, TSpec, TStructuring > * >::Type getValue( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * me );       	// "projects/library/seqan/chaining/skip_base_element.h"(197)

//____________________________________________________________________________
// goNext

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void goNext( SkipBaseElement< TObject, TModus, TSpec, TStructuring > *& me );       	// "projects/library/seqan/chaining/skip_base_element.h"(361)
template <typename TObject, typename TSpec, typename TStructuring > inline void goNext( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > *& me );       	// "projects/library/seqan/chaining/skip_base_element.h"(369)

//____________________________________________________________________________
// goPrevious

template <typename TObject, typename TSpec, typename TStructuring > inline void goPrevious( SkipBaseElement< TObject, Static, TSpec, TStructuring > *& me );       	// "projects/library/seqan/chaining/skip_base_element.h"(438)
template <typename TObject, typename TSpec, typename TStructuring > inline void goPrevious( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > *& me );       	// "projects/library/seqan/chaining/skip_base_element.h"(446)

//____________________________________________________________________________
// insert

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void insert( SkipList< TObject, TModus, TSpec, TStructuring > & list, TObject & obj );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(111)
template <typename TObject, typename TSpec, typename TStructuring > inline void insert( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, TObject & obj );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(121)
template <typename TObject, typename TSpec, typename TStructuring, typename TParam > inline void insert( SkipList< TObject, Dynamic, TSpec, TStructuring > & list, TObject & obj, TParam & param );       	// "projects/library/seqan/chaining/skip_list_dynamic.h"(194)

//____________________________________________________________________________
// key

template <typename TFragType, typename TSpec, typename TSize > inline typename Key< TFragType >::Type key( _ChainPoint< TFragType, TSpec > & me, TSize dim );       	// "projects/library/seqan/chaining/chain_point.h"(32)
template <typename TFragType, typename TSpec, typename TSize > inline typename Key< TFragType >::Type key( const _ChainPoint< TFragType, TSpec > & me, TSize dim );       	// "projects/library/seqan/chaining/chain_point.h"(42)
template <typename TFragType > inline typename Key< TFragType >::Type key( _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(30)
template <typename TFragType > inline typename Key< TFragType >::Type key( const _WrapperPoint< TFragType > & me );       	// "projects/library/seqan/chaining/chain_wrapper_point.h"(37)
template <typename TType, typename TIterType > inline typename Key< typename Value< typename Iterator< TType >::Type >::Type >::Type key( Iter< TType, TIterType > & it );       	// "projects/library/seqan/chaining/skip_list_iterator.h"(61)
template <typename TType, typename TIterType, typename TParam > inline typename Key< typename Value< typename Iterator< TType >::Type >::Type >::Type key( Iter< TType, TIterType > & it, TParam & param );       	// "projects/library/seqan/chaining/skip_list_iterator.h"(69)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Key< TObject >::Type key( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_base_element.h"(704)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TParam > inline typename Key< TObject >::Type key( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, TParam & p );       	// "projects/library/seqan/chaining/skip_base_element.h"(713)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline typename Key< TObject >::Type key( SkipElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_element.h"(219)

//____________________________________________________________________________
// leftPosition

template <typename TBorder, typename TSpec, typename TSize > inline TBorder leftPosition( Fragment< TBorder, TSpec > & me, TSize dim );       	// "projects/library/seqan/chaining/fragment.h"(37)
template <typename TBorder, typename TSpec, typename TSize > inline TBorder leftPosition( const Fragment< TBorder, TSpec > & me, TSize dim );       	// "projects/library/seqan/chaining/fragment.h"(45)

//____________________________________________________________________________
// length

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Size< SkipList< TObject, TModus, TSpec, TStructuring > >::Type length( SkipList< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_list_impl.h"(165)

//____________________________________________________________________________
// moveValue

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TPos > void moveValue( SkipList< TObject, TModus, TSpec, TStructuring > & me, TPos & pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(184)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TPos > void moveValue( SkipList< TObject, TModus, TSpec, TStructuring > const & me, TPos & pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(192)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TPos > void moveValue( SkipList< TObject, TModus, TSpec, TStructuring > & me, TPos const & pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(200)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TPos > void moveValue( SkipList< TObject, TModus, TSpec, TStructuring > const & me, TPos const & pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(208)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TValue > inline void moveValue( SkipBaseElement< TObject, TModus, TSpec, TStructuring > *& it, TValue const & _value);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(97)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TValue > inline void moveValue( SkipBaseElement< TObject, TModus, TSpec, TStructuring > const *& it, TValue const & _value);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(106)

//____________________________________________________________________________
// mt_init

int mt_init();       	// "projects/library/seqan/chaining/mersenne_twister.h"(29)

//____________________________________________________________________________
// mt_random

inline unsigned long mt_random();       	// "projects/library/seqan/chaining/mersenne_twister.h"(38)

//____________________________________________________________________________
// operator+

template <typename TObject, typename TSLSpec, typename TStructuring, typename TIterator, typename TSpec, typename TIntegral> inline Iter< SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > operator+ (Iter< SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > const & left, TIntegral right);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(147)
template <typename TObject, typename TSLSpec, typename TStructuring, typename TIterator, typename TSpec, typename TIntegral> inline Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > operator+ (TIntegral left, Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > const & right);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(161)

//____________________________________________________________________________
// operator+=

template <typename TObject, typename TSLSpec, typename TStructuring, typename TIterator, typename TSpec, typename TIntegral> inline Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > & operator+= (Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > & left, TIntegral right);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(180)

//____________________________________________________________________________
// operator-

template <typename TObject, typename TSLSpec, typename TStructuring, typename TIterator, typename TSpec, typename TIntegral> inline Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > operator- (Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > const & left, TIntegral right);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(198)

//____________________________________________________________________________
// operator-=

template <typename TObject, typename TSLSpec, typename TStructuring, typename TIterator, typename TSpec, typename TIntegral> inline Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > & operator-= (Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > & left, TIntegral right);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(229)

//____________________________________________________________________________
// parentAllocator

template <typename TClass, typename TParentAlloc > inline TParentAlloc & parentAllocator( Allocator< ClassPool< TClass, Unlimited, TParentAlloc > > & me );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(136)
template <typename TClass, typename TParentAlloc > inline TParentAlloc & parentAllocator( Allocator< ClassPool< TClass, Limited, TParentAlloc > > & me );       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(266)

//____________________________________________________________________________
// position

template <typename TObject, typename TSLSpec, typename TStructuring, typename TIterator, typename TSpec> inline typename Position<Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > const>::Type position(Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > const & me);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(116)
template <typename TObject, typename TSLSpec, typename TStructuring, typename TIterator, typename TSpec, typename TContainer2> inline typename Position<Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > const>::Type position(Iter<SkipList< TObject, Dynamic, TSLSpec, TStructuring >, AdaptorIterator<TIterator, TSpec> > const & me, TContainer2 const &);       	// "projects/library/seqan/chaining/skip_list_iterator.h"(134)

//____________________________________________________________________________
// printElementValue

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline void printElementValue( SkipElement< TObject, TModus, TSpec, TStructuring > & me );       	// "projects/library/seqan/chaining/skip_element.h"(306)

//____________________________________________________________________________
// printLayerScores

template <typename TObject, typename TSpec, typename TStructuring, typename TSize1, typename TSize2 > void printLayerScores( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * list, TSize1 layer, TSize2 _dim );       	// "projects/library/seqan/chaining/rmt_base.h"(185)
template <typename TObject, typename TSpec, typename TStructuring, typename TSize > void printLayerScores( SkipList< TObject, Static, RT< TSpec >, TStructuring > * list, TSize layer, TSize _dim );       	// "projects/library/seqan/chaining/rt_base.h"(307)

//____________________________________________________________________________
// printScores

template <typename TObject, typename TSpec, typename TStructuring > void printScores( SkipList< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > & list );       	// "projects/library/seqan/chaining/rmt_base.h"(253)

//____________________________________________________________________________
// priority

template <typename TFragType, typename TSpec > inline typename Weight< TFragType >::Type priority( _ChainPoint< TFragType, TSpec > & me );       	// "projects/library/seqan/chaining/chain_point.h"(143)
template <typename TFragType > inline typename Weight< TFragType >::Type priority( _MetaFragment< TFragType > & me );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(56)
template <typename TObject, typename TSpec, typename TStructuring > inline typename Weight< TObject >::Type priority( SkipBaseElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * me );       	// "projects/library/seqan/chaining/rmt_skip_base_element.h"(20)
template <typename TObject, typename TSpec, typename TStructuring > inline typename Weight< TObject >::Type priority( SkipElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * me );       	// "projects/library/seqan/chaining/rmt_skip_element.h"(89)

//____________________________________________________________________________
// rangeMaxQuery

template <typename TObject, typename TSpec, typename TStructuring, typename TBorder > TObject * rangeMaxQuery( RangeTree< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > & tree, TBorder & border_obj );       	// "projects/library/seqan/chaining/rmt_common_algos.h"(39)

//____________________________________________________________________________
// rangeQuery

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TResultSet > void rangeQuery( RangeTree< TObject, TModus, TSpec, TStructuring > & me, TObject & first, TObject & second, TResultSet & results );       	// "projects/library/seqan/chaining/rt_base.h"(243)

//____________________________________________________________________________
// replace

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TPos > void replace( SkipList< TObject, TModus, TSpec, TStructuring > & me, TPos & pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(218)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TPos > void replace( SkipList< TObject, TModus, TSpec, TStructuring > const & me, TPos & pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(227)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TPos > void replace( SkipList< TObject, TModus, TSpec, TStructuring > & me, TPos const & pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(236)

//____________________________________________________________________________
// right

template <typename TObject, typename TSpec, typename TStructuring > inline void right( SkipBaseElement< TObject, Static, TSpec, TStructuring > *& me );       	// "projects/library/seqan/chaining/skip_base_element.h"(574)
template <typename TObject, typename TSpec, typename TStructuring > inline void right( SkipBaseElement< TObject, Dynamic, TSpec, TStructuring > *& me );       	// "projects/library/seqan/chaining/skip_base_element.h"(582)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > __inline void right( SkipElement< TObject, TModus, TSpec, TStructuring > *& me );       	// "projects/library/seqan/chaining/skip_element.h"(76)

//____________________________________________________________________________
// rightPosition

template <typename TBorder, typename TSpec, typename TSize > inline TBorder rightPosition( Fragment< TBorder, TSpec > & me, TSize dim );       	// "projects/library/seqan/chaining/fragment.h"(53)
template <typename TBorder, typename TSpec, typename TSize > inline TBorder rightPosition( const Fragment< TBorder, TSpec > & me, TSize dim );       	// "projects/library/seqan/chaining/fragment.h"(61)

//____________________________________________________________________________
// score

template <typename TValue, typename T> inline TValue score(Score<TValue, Manhattan> & me, T const & left, T const & right);       	// "projects/library/seqan/chaining/score_manhattan.h"(118)
template <typename TValue, typename T> inline TValue score( Score<TValue, ChainSoP> & me, T const & left, T const & right);       	// "projects/library/seqan/chaining/score_chain_sop.h"(119)
template <typename TValue, typename T> inline TValue score(Score<TValue, Zero> & me, T const & left, T const & right);       	// "projects/library/seqan/chaining/score_zero.h"(99)
template <typename TFragType > inline typename Weight< TFragType >::Type score( _MetaFragment< TFragType > & me );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(40)

//____________________________________________________________________________
// searchElement

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > inline typename Iterator< SkipList< TObject, TModus, TSpec, TStructuring > >::Type searchElement( SkipList< TObject, TModus, TSpec, TStructuring > & list, TKey theKey );       	// "projects/library/seqan/chaining/skip_list_base.h"(639)

//____________________________________________________________________________
// setKey

template <typename TFragType, typename TSpec, typename TSize, typename TKey > inline void setKey( _ChainPoint< TFragType, TSpec > & me, TSize dim, TKey val );       	// "projects/library/seqan/chaining/chain_point.h"(53)
template <typename TFragType, typename TSpec, typename TSize, typename TKey > inline void setKey( const _ChainPoint< TFragType, TSpec > & me, TSize dim, TKey val );       	// "projects/library/seqan/chaining/chain_point.h"(63)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > inline void setKey( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me, TKey theKey);       	// "projects/library/seqan/chaining/skip_base_element.h"(687)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > inline void setKey( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * me, TKey theKey);       	// "projects/library/seqan/chaining/skip_base_element.h"(696)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > __inline void setKey( SkipElement< TObject, TModus, TSpec, TStructuring > & me, TKey pos );       	// "projects/library/seqan/chaining/skip_element.h"(228)

//____________________________________________________________________________
// setParentAllocator

template <typename TClass, typename TParentAlloc > inline void setParentAllocator( Allocator< ClassPool< TClass, Unlimited, TParentAlloc > > & me, TParentAlloc & alloc_);       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(145)
template <typename TClass, typename TParentAlloc > inline void setParentAllocator( Allocator< ClassPool< TClass, Limited, TParentAlloc > > & me, TParentAlloc & alloc_);       	// "projects/library/seqan/chaining/skip_pool_alloc.h"(275)

//____________________________________________________________________________
// setPriority

template <typename TFragType, typename TSpec, typename TPrio > inline void setPriority( _ChainPoint< TFragType, TSpec > & me, TPrio prio );       	// "projects/library/seqan/chaining/chain_point.h"(151)
template <typename TFragType, typename TWeight > inline void setPriority( _MetaFragment< TFragType > & me, TWeight prio );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(64)

//____________________________________________________________________________
// setScore

template <typename TFragType, typename TWeight > inline void setScore( _MetaFragment< TFragType > & me, TWeight score );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(48)

//____________________________________________________________________________
// setWeight

template <typename TFragType, typename TWeight> inline void setWeight( _MetaFragment< TFragType > & me, TWeight weight );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(32)
template <typename TBorder, typename TSpec, typename TWeight > inline typename Weight< Fragment< TBorder, TSpec > >::Type setWeight( Fragment< TBorder, TSpec > & me, TWeight weight );       	// "projects/library/seqan/chaining/fragment.h"(85)

//____________________________________________________________________________
// value

template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TPos> inline typename Reference< SkipList< TObject, TModus, TSpec, TStructuring > >::Type value( SkipList< TObject, TModus, TSpec, TStructuring > & me, TPos pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(247)
template <typename TObject, typename TSpec, typename TStructuring, typename TPos> inline typename Reference< SkipList< TObject, Static, TSpec, TStructuring > >::Type value( SkipList< TObject, Static, TSpec, TStructuring > & me, TPos pos);       	// "projects/library/seqan/chaining/skip_list_impl.h"(264)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Reference< SkipBaseElement< TObject, TModus, TSpec, TStructuring > >::Type value( SkipBaseElement< TObject, TModus, TSpec, TStructuring > & me);       	// "projects/library/seqan/chaining/skip_base_element.h"(157)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Reference< SkipBaseElement< TObject, TModus, TSpec, TStructuring > >::Type value( SkipBaseElement< TObject, TModus, TSpec, TStructuring > const & me);       	// "projects/library/seqan/chaining/skip_base_element.h"(165)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline typename Reference< SkipBaseElement< TObject, TModus, TSpec, TStructuring > >::Type value( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * me);       	// "projects/library/seqan/chaining/skip_base_element.h"(173)

//____________________________________________________________________________
// valueConstruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void valueConstruct( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * it );       	// "projects/library/seqan/chaining/skip_base_element.h"(214)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void valueConstruct( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * it, TObject * obj );       	// "projects/library/seqan/chaining/skip_base_element.h"(223)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > inline void valueConstruct( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * it, TObject * obj, TKey key );       	// "projects/library/seqan/chaining/skip_base_element.h"(233)
template <typename TObject, typename TModus, typename TSpec, typename TStructuring, typename TKey > __inline void valueConstruct( SkipElement< TObject, TModus, TSpec, TStructuring > * it, SkipElement< TObject, TModus, TSpec, TStructuring > * right, SkipBaseElement< TObject, TModus, TSpec, TStructuring > * down, TKey theKey );       	// "projects/library/seqan/chaining/skip_element.h"(321)

//____________________________________________________________________________
// valueDestruct

template <typename TObject, typename TModus, typename TSpec, typename TStructuring > inline void valueDestruct( SkipBaseElement< TObject, TModus, TSpec, TStructuring > * it );       	// "projects/library/seqan/chaining/skip_base_element.h"(206)

//____________________________________________________________________________
// weight

template <typename TFragType > inline typename Weight< TFragType >::Type weight( _MetaFragment< TFragType > & me );       	// "projects/library/seqan/chaining/chain_meta_fragment.h"(24)
template <typename TObject, typename TSpec, typename TStructuring > inline typename Weight< TObject >::Type weight( SkipBaseElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * me );       	// "projects/library/seqan/chaining/rmt_skip_base_element.h"(12)
template <typename TObject, typename TSpec, typename TStructuring > inline typename Weight< TObject >::Type weight( SkipElement< TObject, Static, RT< MaxTree< TSpec > >, TStructuring > * me );       	// "projects/library/seqan/chaining/rmt_skip_element.h"(81)
template <typename TBorder, typename TSpec > inline typename Weight< Fragment< TBorder, TSpec > >::Type weight( Fragment< TBorder, TSpec > & me );       	// "projects/library/seqan/chaining/fragment.h"(69)
template <typename TBorder, typename TSpec > inline typename Weight< Fragment< TBorder, TSpec > >::Type weight( const Fragment< TBorder, TSpec > & me );       	// "projects/library/seqan/chaining/fragment.h"(76)

} //namespace seqan

#endif

