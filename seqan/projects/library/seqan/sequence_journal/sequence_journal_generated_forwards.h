 /*==========================================================================
                SeqAn - The Library for Sequence Analysis
                          http://www.seqan.de 
 ============================================================================
  Copyright (C) 2007

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

 ==========================================================================*/

#ifndef SEQAN_HEADER_SEQUENCE_JOURNAL_GENERATED_FORWARDS_H 
#define SEQAN_HEADER_SEQUENCE_JOURNAL_GENERATED_FORWARDS_H 

//////////////////////////////////////////////////////////////////////////////
// NOTE: This file is automatically generated by build_forwards.py
//       Do not edit this file manually!
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
// CLASSES
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// Journal

template <typename TStringSpec, typename TJournalSpec> struct Journal;       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/string_journal.h"(34)

//____________________________________________________________________________
// JournalTree

template <typename TNode, typename TTreeSpec> class JournalTree;       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree.h"(15)

//____________________________________________________________________________
// SegmentNode

template <typename TPos, typename TSize> struct SegmentNode;       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree_node.h"(18)

//____________________________________________________________________________
// Unbalanced

struct Unbalanced;       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree.h"(11)

} //namespace seqan


//////////////////////////////////////////////////////////////////////////////
// TYPEDEFS


//////////////////////////////////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// _subtractFromVirtualPositionsRightOf

template <typename TNode> inline void _subtractFromVirtualPositionsRightOf(TNode * node, typename Position<TNode>::Type const & pos, typename Position<TNode>::Type const & delta);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree.h"(85)

//____________________________________________________________________________
// clear

template <typename TValue, typename TStringSpec, typename TJournalSpec> inline void clear(String<TValue, Journal<TStringSpec, TJournalSpec> > & journalString);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/string_journal.h"(192)

//____________________________________________________________________________
// erase

template <typename TValue, typename TStringSpec, typename TJournalSpec, typename TPos> inline void erase(String<TValue, Journal<TStringSpec, TJournalSpec> > & journalString, TPos const & pos, TPos const & posEnd);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/string_journal.h"(212)
template <typename TValue, typename TStringSpec, typename TJournalSpec, typename TPos> inline void erase(String<TValue, Journal<TStringSpec, TJournalSpec> > & journalString, TPos const & pos);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/string_journal.h"(222)

//____________________________________________________________________________
// findNodeWithVirtualPos

template <typename TNode, typename TPos> inline void findNodeWithVirtualPos(TNode * & node, TNode * & parent, JournalTree<TNode, Unbalanced> const & tree, TPos const & pos);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree.h"(106)

//____________________________________________________________________________
// host

template <typename TValue, typename TStringSpec, typename TJournalSpec> inline String<TValue, TStringSpec> & host(String<TValue, Journal<TStringSpec, TJournalSpec> > & journalString);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/string_journal.h"(178)

//____________________________________________________________________________
// operator<<

template <typename TStream, typename TNode, typename TTreeSpec> inline TStream & operator<<(TStream & stream, JournalTree<TNode, TTreeSpec> const & tree);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree.h"(58)
template <typename TStream, typename TPos, typename TSize> TStream & operator<<(TStream & stream, SegmentNode<TPos, TSize> const & node);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree_node.h"(78)
template <typename TStream, typename TValue, typename TStringSpec, typename TJournalSpec> inline TStream & operator<<(TStream & stream, String<TValue, Journal<TStringSpec, TJournalSpec> > & journalString);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/string_journal.h"(124)

//____________________________________________________________________________
// recordErase

template <typename TNode> inline void recordErase(JournalTree<TNode, Unbalanced> & tree, typename Position<TNode>::Type const & pos, typename Position<TNode>::Type const & posEnd);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree.h"(133)

//____________________________________________________________________________
// reinit

template <typename TNode> inline void reinit(JournalTree<TNode, Unbalanced> & tree, typename Size<TNode>::Type originalStringLength);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/journal_tree.h"(67)

//____________________________________________________________________________
// setHost

template <typename TValue, typename TStringSpec, typename TJournalSpec> inline void setHost(String<TValue, Journal<TStringSpec, TJournalSpec> > & journalString, String<TValue, TStringSpec> & str);       	// "/Users/holtgrew/Development/seqan-trunk/projects/library/seqan/sequence_journal/string_journal.h"(164)

} //namespace seqan

#endif

